version: 2.1
jobs:
 build:
   docker:
     - image: mcr.microsoft.com/dotnet/core/sdk:2.2
   steps:
     - checkout
     
     - run:
         name: Restore packages
         command:
           dotnet restore
     
     - run:
         name: install Tool CodeCov
         command:
           dotnet tool install --tool-path ./ Codecov.Tool    
     
     - run:
         name: install Tool ReportGenerator
         command:
           dotnet tool install --tool-path ./ dotnet-reportgenerator-globaltool       
     
     - run:
         name: Build App
         command:
           dotnet build
     
     - run:
         name: Run Test
         command:
           dotnet test --no-build /p:CollectCoverage=true  /p:CoverletOutputFormat=\"cobertura,opencover\" /p:CoverletOutput=\"./../../results/\"

     - run:
         name: Publish CodeCov
         command:
           ./codecov -f "/root/project/results/coverage.opencover.xml" -t $codeCovToken

     - run:
         name: Generate Report
         command:
           ./reportgenerator "-reports:/root/project/results/coverage.opencover.xml" \
                            "-targetdir:/root/project/results/" \
                            "-reporttypes:Html" \
                            "-sourcedirs:/root/project/results/"  
     
     - store_artifacts:
          path: results/

 dockerBuild:
    machine:
      image: circleci/classic:201808-01 
    steps:
      - checkout

      - run:
          name: docker build
          command: docker build --build-arg sonarLogin=$sonarLogin --build-arg codecovToken=$codeCovToken  -t imp:v1 .

 dockerIntergatedtest:
    docker:
     - image: ubuntu:20.10
    steps:
      - checkout   

      - run:
          name: Install dependece
          command: apt-get update 
      - run:
          name: Install dependece
          command:  apt-get install -y \
                    apt-transport-https \
                    ca-certificates \
                    curl \
                    gnupg-agent \
                    software-properties-common


      - run:
          name: Download Docker
          command:  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      
      - run:
          name: Add Docker Repo
          command: add-apt-repository \
                  "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
                  $(lsb_release -cs) \
                  stable"

      - run:
          name: Install Docker
          command: apt-get update && \
                    apt-get install docker-ce docker-ce-cli containerd.io -y
      - run:
          name: Install Node
          command: apt-get nodejs npm -y 

      - run:
          name: install newman
          command: npm install -g newman

      - run:
          name: Pull Docker Compose
          command: docker pull docker/compose

      - run:
          name: docker compose
          command: docker-compose up -d
      
      - run:
          name: Run Tests
          command: newman run ImpostoRenda.postman_collection.json -n 10 -r cli,json --reporter-json-export ./result/result.json   

      - store_artifacts:
          path: results/    

orbs:
  node: 'circleci/node@2.1.1'
  newman: postman/newman@0.0.2

workflows:
  version: 2
  build_and_test:
    jobs:
      - build  
      - dockerBuild
      - dockerIntergatedtest