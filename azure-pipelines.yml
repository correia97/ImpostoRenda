# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: 'restore'

- task: SonarCloudPrepare@1
  displayName: 'Configure Sonar'
  inputs:
    SonarCloud: 'Sonar'
    organization: 'correia97'
    scannerMode: 'MSBuild'
    projectKey: 'correia97_ImpostoRendaLB3'
    projectName: 'ImpostoRendaLB3'
    extraProperties: |
          sonar.exclusions=**/*.js,**/*.css,**/obj/**,**/*.dll
          sonar.branch.name=$(Build.SourceBranchName)
          sonar.cs.opencover.reportsPaths='Tests/ImpostoRendaLB3.UnitTests/coverage.opencover.xml'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'

- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: 'test'
    arguments: '--no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover'
    testRunTitle: 'Tests'

- task: PublishCodeCoverageResults@1
  displayName: 'Cobertura'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: 'Tests/ImpostoRendaLB3.UnitTests/opencover.cobertura.xml'

- task: SonarCloudAnalyze@1
  displayName: 'Sonar Analyze'

- task: SonarCloudPublish@1
  displayName: 'Sonar Publish'
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacst'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

