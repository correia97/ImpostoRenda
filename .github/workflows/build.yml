# Nome da configuração de build
name: Build no github
# Definição de onde será execuddo
on:
  # Definição de qual evento vai disparar o build
  push:
    # lista de branch que serão utilizadas
    branches: 
      - master

# definição dos serviços de build que serão executados
jobs:
  # Definição do serviço 
  build:
    # Nome do serviço
    name: Build no Ubuntu
    # máquinas onde será executado o serviço
    runs-on: ubuntu-latest
    # Definição do passos que o serviço deve executar
    steps:
    # Clone do projeto
    - uses: actions/checkout@v1
    # Execução de uma linha de comando 
    - name: Restauração dos pacotes
      run: dotnet restore
    # Execução de uma linha de comando   
    - name: Build
      run: dotnet build
    # Execução de uma linha de comando   
    - name: Execução dos Teste de Unidade
      run: dotnet test --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
    # Execução de uma linha de comando   
    - name: Instalação do gerador de relatório de cobertura
      run: dotnet tool install --global  dotnet-reportgenerator-globaltool
    # Execução de uma linha de comando    
    - name: Geração do relatório de cobertura
      run: reportgenerator "-reports:/home/runner/work/ImpostoRenda/ImpostoRenda/Tests/ImpostoRenda.UnitTests/coverage.opencover.xml" \
                            "-targetdir:/home/runner/work/ImpostoRenda/ImpostoRenda/Tests/ImpostoRenda.UnitTests/" \
                            "-reporttypes:Html" \
                            "-sourcedirs:/home/runner/work/ImpostoRenda/ImpostoRenda/Tests/ImpostoRenda.UnitTests/"
    # Armazenamento dos arquivos gerados pelo resultado dos testes
    - name: Armazenamento dos relatório
      uses: actions/upload-artifact@v1
      with:
        name: code-coverage-report
        path: /home/runner/work/ImpostoRenda/ImpostoRenda/Tests/ImpostoRenda.UnitTests/index.html
  # Definição do serviço 
  sonarCloudTrigger:    
    # Nome do serviço
    name: Analise no Sonar
    # Dependencia do Serviço de build
    needs: build
    # máquinas onde será executado o serviço
    runs-on: ubuntu-latest
    # Definição do passos que o serviço deve executar
    steps:
      # Clone do projeto
      - name: Clone Repositorio
        uses: actions/checkout@master
      # Configuração do sonar 
      - name: Analalise do Sonar
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}     
  # Definição do serviço   
  codeCovTrigger:
    # Dependencia do Serviço de build
    needs: build  
    # Nome do serviço
    name: Analise do Codecov
    # máquinas onde será executado o build
    runs-on: ubuntu-latest
    # Definição do passos que o serviço deve executar
    steps:
      # Clone do projeto
      - name: Clone Repositório
        uses: actions/checkout@master
      # Execução de uma linha de comando  
      - name: Instalação do Codecov.Tool 
        run: dotnet tool install --global Codecov.Tool
      # Execução de uma linha de comando    
      - name: Analise e upload dos dados para o CodeCov
        run: codecov -f "/home/runner/work/ImpostoRenda/ImpostoRenda/Tests/ImpostoRenda.UnitTests/coverage.opencover.xml" -t {{ secrets.CODECOV_TOKEN }}
  # Definição do serviço 
  buildDocker:  
    # Nome do serviço
    name: Build da imagem Docker
    # máquinas onde será executado o build 
    runs-on: ubuntu-latest
    # Definição do passos que o serviço deve executar
    steps:
      # Clone do projeto
      - name: Clone Repositório
        uses: actions/checkout@master 
      # Execução de uma linha de comando         
      - name: Docker da imagem com análise do sonar e do codecov
        run: docker build --build-arg sonarLogin=${{ secrets.SONAR_TOKEN }} --build-arg codecovToken=${{ secrets.CODECOV_TOKEN }} -t imp:v${{ secrets.GITHUB_RUN_ID }} .
  # Definição do serviço 
  intergratedTestsWithDocker:
    # Nome do serviço
    name: Teste integrado com Docker e Newman
    # máquinas onde será executado o build 
    runs-on: ubuntu-latest
    # Descrição da execução dos teste com versões diferentes do node
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    # Definição do passos que o serviço deve executar
    steps:
      # Clone do projeto
      - name: Clone Repositório
        uses: actions/checkout@master 
      # Execução de uma linha de comando  
      - name: Execução do projeto com compose
        run: docker-compose up -d
      # Execução de uma linha de comando 
      - name: Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # Execução de uma linha de comando 
      - name: Instalação do newman
        run: npm install -g newman
      # Execução de uma linha de comando 
      - name: Execução dos Teste do Newman
        run: newman run ImpostoRenda.postman_collection.json -n 20 -r cli,json --reporter-json-export ./result/result.json    

