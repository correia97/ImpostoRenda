name: Git Buil

on:
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Restore packge
      run: dotnet restore
    - name: Build
      run: dotnet build
    - name: Test
      run: dotnet test --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
    - name: Install ReportGenarator tool
      run: dotnet tool install --global  dotnet-reportgenerator-globaltool 
    - name: Generate Report
      run: reportgenerator "-reports:/home/runner/work/ImpostoRendaLB3/ImpostoRendaLB3/Tests/ImpostoRendaLB3.UnitTests/coverage.opencover.xml" \
                            "-targetdir:/home/runner/work/ImpostoRendaLB3/ImpostoRendaLB3/Tests/ImpostoRendaLB3.UnitTests/" \
                            "-reporttypes:Html" \
                            "-sourcedirs:/home/runner/work/ImpostoRendaLB3/ImpostoRendaLB3/Tests/ImpostoRendaLB3.UnitTests/"

    - name: Archive code coverage results
      uses: actions/upload-artifact@v1
      with:
        name: code-coverage-report
        path: /home/runner/work/ImpostoRendaLB3/ImpostoRendaLB3/Tests/ImpostoRendaLB3.UnitTests/*.html
                                
  sonarCloudTrigger:
    needs: build
    name: SonarCloud Trigger
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@master
      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}     
   
  codeCovTrigger:
    needs: build
    name: CodeCov Trigger
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@master
      - name: Install CodeCov tool   
        run: dotnet tool install --global Codecov.Tool  
      - name: Upload data
        run: codecov -f "/home/runner/work/ImpostoRendaLB3/ImpostoRendaLB3/Tests/ImpostoRendaLB3.UnitTests/coverage.opencover.xml" -t {{ secrets.CODECOV_TOKEN }}


  buildDocker:
    needs: build
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@master      
      - name: Docker build
        run: docker build --build-arg sonarLogin=${{ secrets.SONAR_TOKEN }} --build-arg codecovToken=${{ secrets.CODECOV_TOKEN }} -t imp:v${{ secrets.GITHUB_RUN_ID }} .

  intergratedTestsWithDocker:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 13.x, 14.x]
    steps:
      - name: Clone Repository
        uses: actions/checkout@master  
      - name: Docker Compose
        run: docker-compose up -d
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install newman
        run: npm install -g newman
      - name: Run Test
        run: newman run ImpostoRenda.postman_collection.json -n 10 -r cli,json --reporter-json-export ./result/result.json    

